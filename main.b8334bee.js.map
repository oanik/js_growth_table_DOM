{"version":3,"sources":["scripts/main.js"],"names":["container","document","querySelector","fabrica","table","buttons","querySelectorAll","e","rowCollection","rows","lastRowIndex","length","cellLastIndex","cells","element","target","indx","disabled","className","newRow","cloneNode","append","remove","cellsInRow","newCell","helperFunc","addEventListener"],"mappings":";AAAA,aAEA,IAAMA,EAAYC,SAASC,cAAc,cACnCC,EAAU,WACRC,IAAAA,EAAQH,SAASC,cAAc,UAG/BG,EAAUJ,SAASK,iBAAiB,UAEnC,OAAA,SAASC,GAMT,IALCC,IAAAA,EAAgBJ,EAAMK,KACtBC,EAAeF,EAAcG,OAAS,EACtCC,EAAgBJ,EAAc,GAAGK,MAAMF,OAAS,EAChDG,EAAUP,EAAEQ,OAETC,EAAO,EAAGA,EAAOX,EAAQM,OAAQK,IACxCX,EAAQW,GAAMC,UAAW,EAGnBH,OAAAA,EAAQI,WACT,IAAA,oBACCR,GAAAA,EAfO,EAkBT,YAFAI,EAAQG,UAAW,GAKrBH,EAAQG,UAAW,EAEbE,IAAAA,EAASX,EAAcE,GAAcU,WAAU,GAErDhB,EAAMiB,OAAOF,GACb,MACG,IAAA,oBACCT,GA7BO,IA6BPA,EAGF,YAFAI,EAAQG,UAAW,GAIrBH,EAAQG,UAAW,EAEnBT,EAAcE,GAAcY,SAC5B,MAEG,IAAA,uBAECV,GAxCO,IAwCPA,EAGF,YAFAE,EAAQG,UAAW,GAIrBH,EAAQG,UAAW,EAEd,IAAA,IAAID,EAAO,EAAGA,EAAOR,EAAcG,OAAQK,IAAQ,CAChDO,IAEAC,EAFahB,EAAcQ,GAAMH,MACXD,EAAgB,GACnBQ,WAAU,GAEnCZ,EAAcQ,GAAMK,OAAOG,GAE7B,MAEG,IAAA,uBACCZ,GA1DO,IA0DPA,EAGF,YAFAE,EAAQG,UAAW,GAKhB,IAAA,IAAID,EAAO,EAAGA,EAAOR,EAAcG,OAAQK,IAAQ,CACnCR,EAAcQ,GAAMH,MACXD,GAEnBU,aAMbG,EAAatB,IAEnBH,EAAU0B,iBAAiB,QAASD","file":"main.b8334bee.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst container = document.querySelector('.container');\nconst fabrica = function() {\n  const table = document.querySelector('.field');\n  const minCount = 1;\n  const maxCount = 9;\n  const buttons = document.querySelectorAll('button');\n\n  return function(e) {\n    const rowCollection = table.rows;\n    const lastRowIndex = rowCollection.length - 1;\n    const cellLastIndex = rowCollection[0].cells.length - 1;\n    const element = e.target;\n\n    for (let indx = 0; indx < buttons.length; indx++) {\n      buttons[indx].disabled = false;\n    }\n\n    switch (element.className) {\n      case 'append-row button':\n        if (lastRowIndex > maxCount) {\n          element.disabled = true;\n\n          return;\n        }\n\n        element.disabled = false;\n\n        const newRow = rowCollection[lastRowIndex].cloneNode(true);\n\n        table.append(newRow);\n        break;\n      case 'remove-row button':\n        if (lastRowIndex === minCount) {\n          element.disabled = true;\n\n          return;\n        }\n        element.disabled = false;\n\n        rowCollection[lastRowIndex].remove();\n        break;\n\n      case 'append-column button':\n\n        if (cellLastIndex === maxCount) {\n          element.disabled = true;\n\n          return;\n        }\n        element.disabled = false;\n\n        for (let indx = 0; indx < rowCollection.length; indx++) {\n          const cellsInRow = rowCollection[indx].cells;\n          const lastCell = cellsInRow[cellLastIndex - 1];\n          const newCell = lastCell.cloneNode(true);\n\n          rowCollection[indx].append(newCell);\n        }\n        break;\n\n      case 'remove-column button':\n        if (cellLastIndex === minCount) {\n          element.disabled = true;\n\n          return;\n        }\n\n        for (let indx = 0; indx < rowCollection.length; indx++) {\n          const cellsInRow = rowCollection[indx].cells;\n          const lastCell = cellsInRow[cellLastIndex];\n\n          lastCell.remove();\n        }\n        break;\n    }\n  };\n};\nconst helperFunc = fabrica();\n\ncontainer.addEventListener('click', helperFunc);\n"]}